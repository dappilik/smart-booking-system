server:
  port: 8080

spring:
  application:
    name: smart-booking-system

  datasource:
    url: jdbc:postgresql://localhost:5432/bookingdb
    username: booking_user
    password: booking_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      initialization-fail-timeout: 0
      maximum-pool-size: 5
      connection-timeout: 30000
      idle-timeout: 10000
      max-lifetime: 20000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  redis:
    host: localhost
    port: 6379

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: booking-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  level:
    root: INFO
    com.example.booking: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
